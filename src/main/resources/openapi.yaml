openapi: 3.0.3
info:
  title: Factom DIDs
  description: Decentralized Identifiers (DID) on Factom, provides models, APIs, clients and universal resolver integrations for DIDs on top of Factom.
  contact:
    name: Sphereon B.V.
    email: dev@sphereon.com
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
  version: 0.3.1
servers:
  - url: http://localhost:8080
tags:
  - name: FactomDID
    description: Factom DID API endpoints to create, update and deactivate Factom DIDs
    externalDocs:
      description: Factom DID specification
      url: 'https://github.com/bi-foundation/FIS/blob/feature/DID/FIS/DID.md'
  - name: FactomIdentity
    description: Factom Identity API endpoints to create, update and Factom Identities
  - name: UniversalResolver
    description: Universal resolver compatible endpoints
    externalDocs:
      description: Universal resolver github
      url: 'https://github.com/decentralized-identity/universal-resolver/'
paths:
  /factom/identity/chains:
    post:
      tags:
        - FactomIdentity
      summary: Create a new Factom Identity chain
      operationId: createFactomIdentity
      requestBody:
        description: Create a new Factom Identity chain
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityEntry'
        required: true
      responses:
        201:
          description: Identity chain creation received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityResponse'
        '422':
          description: Validation error
          content: {}
      security:
        - {}
        - ApiKeyAuth: []
        - BearerAuth: []
        - OAuth2:
            - read
            - write
      x-codegen-request-body-name: body
  /factom/identity/chains/{chainId}:
    put:
      tags:
        - FactomIdentity
      summary: Update a Factom Identity (replace keys)
      operationId: updateFactomIdentity
      parameters:
        - name: chainId
          in: path
          description: target chain Id
          required: true
          schema:
            type: string
      responses:
        201:
          description: Identity updates received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplaceKeyRequest'
        '404':
          description: Identity chain not found
          content: {}
        '422':
          description: Validation error
          content: {}
      security:
        - {}
        - ApiKeyAuth: []
        - BearerAuth: []
        - OAuth2:
            - read
            - write
      x-codegen-request-body-name: body
    get:
      tags:
        - FactomIdentity
      summary: Get a Factom Identity
      operationId: getFactomIdentity
      parameters:
        - name: chainId
          in: path
          description: Identity chain Id
          required: true
          schema:
            type: string
        - name: height
          in: query
          description: Give the identity as active at the specified block height
          required: false
          schema:
            type: integer
            minimum: 0
        - name: time
          in: query
          description: Give the identity as it was active at a specific time
          required: false
          schema:
            type: string
            format: date-time
        - name: include
          in: query
          description: Include certain values in the response
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum:
                - heights
                - times
      responses:
        200:
          description: Resolved identity with optional metadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityResponse'
        '404':
          description: Identity chain not found
          content: {}
        '422':
          description: Validation error
          content: {}
      security:
        - {}
        - ApiKeyAuth: []
        - BearerAuth: []
        - OAuth2:
            - read
            - write
      x-codegen-request-body-name: body
  /factom/identity/chains/{chainId}/entries:
    get:
      tags:
        - FactomIdentity
      summary: Get Factom Identity entries
      operationId: getFactomIdentityEntries
      parameters:
        - name: chainId
          in: path
          description: Identity chain Id
          required: true
          schema:
            type: string
        - name: metadata
          in: query
          description: Include certain values in the response
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum:
                - heights
                - times
      responses:
        200:
          description: Valid identity entries
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityEntries'
        '404':
          description: Identity chain not found
          content: {}
        '422':
          description: Validation error
          content: {}
      security:
        - {}
        - ApiKeyAuth: []
        - BearerAuth: []
        - OAuth2:
            - read
            - write
      x-codegen-request-body-name: body
  /factom/identity/chains/{chainId}/attributes:
    post:
      tags:
        - FactomIdentity
      summary: Add a Factom Identity attribute
      operationId: createFactomIdentityAttribute
      parameters:
        - name: chainId
          in: path
          description: target chain Id
          required: true
          schema:
            type: string
      responses:
        200:
          description: Identity chain attributes received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateIdentityRequest'
        '404':
          description: Identity chain not found
          content: {}
        '422':
          description: Validation error
          content: {}
      security:
        - {}
        - ApiKeyAuth: []
        - BearerAuth: []
        - OAuth2:
            - read
            - write
      x-codegen-request-body-name: body
    get:
      tags:
        - FactomIdentity
      summary: Get Factom Identity attribute
      operationId: getFactomIdentityAttributes
      parameters:
        - name: chainId
          in: path
          description: target chain Id
          required: true
          schema:
            type: string
      responses:
        200:
          description: Identity chain attributes received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateIdentityRequest'
        '404':
          description: Identity chain not found
          content: {}
        '422':
          description: Validation error
          content: {}
      security:
        - {}
        - ApiKeyAuth: []
        - BearerAuth: []
        - OAuth2:
            - read
            - write
      x-codegen-request-body-name: body
  /factom/identity/chains/{chainId}/endorsments:
    post:
      tags:
        - FactomIdentity
      summary: Add a Factom Identity endorsment
      operationId: createFactomIdentityEndorsment
      parameters:
        - name: chainId
          in: path
          description: target chain Id
          required: true
          schema:
            type: string
      responses:
        200:
          description: Identity chain endorsment received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateIdentityRequest'
        '404':
          description: Identity chain not found
          content: {}
        '422':
          description: Validation error
          content: {}
      security:
        - {}
        - ApiKeyAuth: []
        - BearerAuth: []
        - OAuth2:
            - read
            - write
      x-codegen-request-body-name: body
    get:
      tags:
        - FactomIdentity
      summary: Get Factom Identity endorsments
      operationId: getFactomIdentityEndorsments
      parameters:
        - name: chainId
          in: path
          description: target chain Id
          required: true
          schema:
            type: string
      responses:
        200:
          description: Identity chain attributes received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateIdentityRequest'
        '404':
          description: Identity chain not found
          content: {}
        '422':
          description: Validation error
          content: {}
      security:
        - {}
        - ApiKeyAuth: []
        - BearerAuth: []
        - OAuth2:
            - read
            - write
      x-codegen-request-body-name: body
  /factom/identity/dids:
    post:
      tags:
        - FactomDID
      summary: Create a new DID
      operationId: createFactomDid
      requestBody:
        description: Create a new Factom DID chain
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FactomDidContent'
        required: true
      responses:
        '405':
          description: Validation exception
          content: {}
      security:
        - {}
        - ApiKeyAuth: []
        - BearerAuth: []
        - OAuth2:
            - read
            - write
      x-codegen-request-body-name: body
  '/factom/identity/dids/{did}':
    get:
      tags:
        - FactomDID
      summary: Find DID
      description: Returns the Factom DID content
      operationId: getFactomDid
      parameters:
        - name: did
          in: path
          description: DID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FactomDidContent'
        '400':
          description: Invalid DID suplied
          content: {}
        '404':
          description: DID not found
          content: {}
      security:
        - {}
        - ApiKeyAuth: []
        - BearerAuth: []
        - OAuth2:
            - read
            - write
    put:
      tags:
        - FactomDID
      summary: Updates a DID
      operationId: updateFactomDid
      parameters:
        - name: did
          in: path
          description: DID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRequest'
        required: true
      responses:
        '405':
          description: Invalid input
          content: {}
      security:
        - {}
        - ApiKeyAuth: []
        - BearerAuth: []
        - OAuth2:
            - write
    delete:
      tags:
        - FactomDID
      summary: Deactivate a DID
      operationId: deactivateFactomDid
      parameters:
        - name: api_key
          in: header
          schema:
            type: string
        - name: did
          in: path
          description: DID to deactivate
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid DID supplied
          content: {}
        '404':
          description: DID not found
          content: {}
      security:
        - {}
        - ApiKeyAuth: []
        - BearerAuth: []
        - OAuth2:
            - write

  /identifiers/{identifier}:
    get:
      summary: Resolve a DID or other identifier (universal resolver).
      operationId: resolve
      tags:
        - UniversalResolver
      parameters:
        - in: path
          required: true
          name: identifier
          schema:
            type: string
          description: A DID or other identifier to be resolved.
        - in: header
          required: false
          name: Accept
          schema:
            type: string
          example: application/did+ld+json
      responses:
        '200':
          description: successfully resolved!
          content:
            application/json:
              schema:
                type: object
                description: The Resolution Result or DID document.
        '400':
          description: invalid input!
        '500':
          description: error!
      security:
        - {}
        - ApiKeyAuth: []
        - BearerAuth: []
        - OAuth2:
            - read
            - write
components:
  schemas:
    CreateIdentityRequest:
      type: object
      required:
        - tags
        - version
        - keys
      properties:
        tags:
          type: array
          items:
            type: string
            minItems: 1
        version:
          type: integer
          minimum: 1
          maximum: 1
        keys:
          type: array
          items:
            $ref: '#/components/schemas/FactomKey'
      example:
        tags:
          - "example"
          - "id"
        version: 1
        keys:
          - publicValue: "idpubTqmzmR1..."
            type: "idpub"
          - publicValue: "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV"
            type: "Ed25519VerificationKey"
          - publicValue: "idpubYxURG77..."
            type: "idpub"
    IdentityResponse:
      type: object
      required:
        - identity
      readOnly: true
      properties:
        identity:
          $ref: '#/components/schemas/IdentityEntry'
        metadata:
          $ref: '#/components/schemas/Metadata'
    IdentityEntry:
      type: object
      required:
        - version
        - keys
      properties:
        version:
          type: integer
          minimum: 1
          maximum: 1
        keys:
          type: array
          items:
            type: string
      example:
        version: 1
        keys:
          - "idpubTqmzmR1..."
          - "idpubYxURG77..."
    Metadata:
      type: object
      properties:
        creation:
          $ref: '#/components/schemas/BlockInfo'
        update:
          $ref: '#/components/schemas/BlockInfo'
    BlockInfo:
      type: object
      properties:
        blockHeight:
          type: integer
          format: int64
        entryTimestamp:
          type: integer
          format: int64
        blockTimestamp:
          type: integer
          format: int64
        entryHash:
          type: string
    IdentityEntries:
      type: object
      properties:
        creation:
          $ref: '#/components/schemas/IdentityEntry'
        replacements:
          type: array
          items:
            $ref: '#/components/schemas/ReplaceKeyEntry'
        metadata:
          $ref: '#/components/schemas/Metadata'
    ReplaceKeyRequest:
      type: object
      required:
        - oldKey
        - newKey
        - signature
        - signerKey
      properties:
        oldKey:
          $ref: '#/components/schemas/FactomKey'
        newKey:
          $ref: '#/components/schemas/FactomKey'
        signature:
          type: string
          format: byte
        signerKey:
          $ref: '#/components/schemas/FactomKey'
      example:
        oldKey:
          publicValue: "idpubTqmzmR1..."
          type: "idpub"
        newKey:
          publicValue: "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV"
          type: "Ed25519VerificationKey"
        signature: "b7a3c12dc0c8c748ab07525b701122b88bd78f600c76342d27f25e5f92444cde"
        signerKey:
          publicValue: idpubYxURG77...
          type: idpub
    ReplaceKeyEntry:
      type: object
      required:
        - oldKey
        - newKey
        - signature
        - signerKey
      properties:
        oldKey:
          type: string
        newKey:
          type: string
        signature:
          type: string
          format: byte
        signerKey:
          type: string
      example:
        oldKey: "idpubTqmzmR1..."
        newKey: "idpubA4qmR50..."
        signature: "b7a3c12dc0c8c748ab07525b701122b88bd78f600c76342d27f25e5f92444cde"
        signerKey: idpubYxURG77...

    FactomKey:
      type: object
      properties:
        publicValue:
          type: string
        type:
          $ref: '#/components/schemas/KeyType'
    Key:
      type: object
      required:
        - id
        - type
      properties:
        id:
          type: string
          pattern: '^did:factom:$'
          minLength: 43
        type:
          $ref: '#/components/schemas/KeyType'
        controller:
          type: string
          minLength: 43
        publicKeyBase58:
          type: string
        publicKeyBase64:
            type: string
        publicKeyMultibase:
          type: string
        publicKeyHex:
          type: string
        publicKeyPem:
          type: string
        publicKeyJwk:
          $ref: '#/components/schemas/JwkKey'
        blockchainAccountId:
          type: string
        priorityRequirement:
          type: integer
          minimum: 0
        bip44:
          type: string
      example:
        id: "did:factom:e21f9aef1ed841a7d7d634c9dd0dc204c694b51ad7152a44c326113326283eeb#my-key"
        controller: "did:factom:e21f9aef1ed841a7d7d634c9dd0dc204c694b51ad7152a44c326113326283eeb"
        publicKeyBase58: "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV"
        type: "Ed25519VerificationKey"
        priorityRequirement: 0
    ManagementKey:
      allOf:
        - $ref: '#/components/schemas/Key'
        - type: object
          properties:
            priority:
              type: integer
              minimum: 0
      example:
        id: "did:factom:e21f9aef1ed841a7d7d634c9dd0dc204c694b51ad7152a44c326113326283eeb#management-key"
        priority: 0
    DidKey:
      allOf:
        - $ref: '#/components/schemas/Key'
        - type: object
          properties:
            purpose:
              type: array
              items:
                $ref: '#/components/schemas/KeyPurpose'
      example:
        purpose:
          - "publicKey"
          - "authentication"
    JwkKey:
      type: object
      additionalProperties: true
      properties:
        kty:
          $ref: '#/components/schemas/JwkKeyTy'
        crv:
          type: string
        x:
          type: string
        y:
          type: string
        d:
          type: string
        n:
          type: string
        e:
          type: string
        p:
          type: string
        q:
          type: string
        dp:
          type: string
        dq:
          type: string
        qi:
          type: string
        oth:
          type: object
          additionalProperties:
            type: string
        t:
          type: string
        k:
          type: string
        kid:
          type: string
        alg:
          type: string
        use:
          $ref: '#/components/schemas/JwkKeyUse'
        key_ops:
          $ref: '#/components/schemas/JwkKeyOps'
    JwkKeyTy:
      type: string
      enum:
        - EC
        - RSA
        - oct
    JwkKeyCrv:
      type: string
      enum:
        - P-256
        - P-384
        - P-521
    JwkKeyUse:
      type: string
      enum:
        - sig
        - enc
    JwkKeyOps:
      type: string
      enum:
        - sign
        - verify
        - encrypt
        - decrypt
        - unwrapKey
        - deriveKey
        - deriveBits
    Service:
      type: object
      additionalProperties: true
      required:
        - id
        - type
      properties:
        id:
          type: string
        type:
          type: string
        serviceEndpoint:
          type: string
        priorityRequirement:
          type: integer
          minimum: 0
      example:
        id: "did:factom:e21f9aef1ed841a7d7d634c9dd0dc204c694b51ad7152a44c326113326283eeb#example-service"
        type: "CredentialRepositoryService"
        serviceEndpoint: "https://repository.example.com/service/8377464"
        priorityRequirement: 0

    KeyType:
      type: string
      enum:
        - Ed25519VerificationKey
        - Ed25519VerificationKey2020
        - EcdsaSecp256k1VerificationKey2019
        - RsaVerificationKey2018
        - JsonWebKey2020
        - Bls12381G1Key2020
        - GpgVerificationKey2020
        - X25519KeyAgreementKey2019
        - SchnorrSecp256k1VerificationKey2019
        - EcdsaSecp256k1RecoveryMethod2020
        - idpub
    KeyPurpose:
      type: string
      enum:
        - publicKey
        - verificationMethod
        - authentication
        - assertionMethod
        - capabilityDelegation
        - capabilityInvocation
        - keyAgreement
    IdLookup:
      type: object
      required:
        - id
      properties:
        id:
          type: string
      example:
        id: "did:factom:e21f9aef1ed841a7d7d634c9dd0dc204c694b51ad7152a44c326113326283eeb#example-key"
    IdPurposeLookup:
      allOf:
        - $ref: '#/components/schemas/IdLookup'
        - type: object
          properties:
            purpose:
              type: array
              items:
                $ref: '#/components/schemas/KeyPurpose'
      example:
        - id: "did:factom:e21f9aef1ed841a7d7d634c9dd0dc204c694b51ad7152a44c326113326283eeb#example-key3"
          purpose:
            - "publicKey"
            - "authentication"
    FactomDidContent:
      allOf:
        - type: object
          properties:
            didMethodVersion:
              $ref: '#/components/schemas/DidMethodVersion'
        - $ref: '#/components/schemas/KeyedObjects'
    UpdateRequest:
      type: object
      properties:
        revoke:
          $ref: '#/components/schemas/RevokeLookups'
        add:
          $ref: '#/components/schemas/KeyedObjects'
    KeyedObjects:
      type: object
      properties:
        managementKey:
          type: array
          items:
            $ref: '#/components/schemas/ManagementKey'
        didKey:
          type: array
          items:
            $ref: '#/components/schemas/DidKey'
        service:
          type: array
          items:
            $ref: '#/components/schemas/Service'
    RevokeLookups:
      type: object
      properties:
        managementKey:
          type: array
          items:
            $ref: '#/components/schemas/IdLookup'
        didKey:
          type: array
          items:
            $ref: '#/components/schemas/IdPurposeLookup'
        service:
          type: array
          items:
            $ref: '#/components/schemas/IdLookup'
      example:
        managementKey:
          - id: "did:factom:e21f9aef1ed841a7d7d634c9dd0dc204c694b51ad7152a44c326113326283eeb#long-example-1"
          - id: "#shorthand-example-2"
        didKey:
          - id: "did:factom:e21f9aef1ed841a7d7d634c9dd0dc204c694b51ad7152a44c326113326283eeb#example-did-1"
            purpose:
              - "publicKey"
          - id: "did:factom:e21f9aef1ed841a7d7d634c9dd0dc204c694b51ad7152a44c326113326283eeb#example-2"
            purpose:
              - "authentication"
              - "publicKey"
        service:
          - id: "did:factom:e21f9aef1ed841a7d7d634c9dd0dc204c694b51ad7152a44c326113326283eeb#example-service"
    DidMethodVersion:
      type: string
      enum:
        - "0.2.0"
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
    OAuth2:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'http://example/oauth/dialog'
          scopes:
            write: modify dids
            read: read dids
    ApiKeyAuth:
      type: apiKey
      name: X-API-Key
      in: header

